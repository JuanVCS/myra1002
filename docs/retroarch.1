.\" retroarch.1:

.TH  "RETROARCH" "1" "November 1, 2011" "RETROARCH" "System Manager's Manual: retroarch"

.SH NAME

retroarch \- The reference frontend for the libretro API.

.SH SYNOPSIS

\fBretroarch\fR [rom file] [OPTIONS]...

.SH "DESCRIPTION"

\fBretroarch\fR is the reference frontend for the libretro API.
libretro is an abstraction of a game system, and can be implemented by any frontend.
The libretro API is designed for games and emulators.
\fBretroarch\fR focuses on exposing needed functionality for the game system through the use of command line and configuration files.
It also features a simple built-in UI called RGUI.

.SH "EXAMPLE COMMANDLINE"

.TP
\fBLoad a ROM, using a specific libretro core and config file.\fR
retroarch --config ~/.config/retroarch/retroarch.cfg --libretro /path/to/libretro/core.so /path/to/rom.rom

.TP
\fBNo command line options will start RetroArch in RGUI mode.\fR
retroarch

.TP
\fBStart RetroArch in RGUI.\fR
retroarch --menu

.SH "RGUI"
RGUI is the built-in GUI system for RetroArch. It is aimed at being controlled with a gamepad only.

.SH "DEFAULT CONTROLS"
By default, only keyboard input is accepted.

.SH "CONFIG OPTIONS"

.TP
\fB[rom file]\fR
If no rom file path is defined on the command line, \fBretroarch\fR will try to load a core with no rom. This will only work with some libretro cores.
\fBretroarch\fR use uncompressed ROMs, but can uncompress roms in the .zip/deflate format if support for it is compiled in.
ROM types supported depend on the libretro implementation used.

.TP
\fB--help, -h\fR
Prints help text.

.TP
\fB--menu\fR
Starts directly in in-game menu (RGUI) if enabled.
Does not require a ROM or libretro implementation to be set.
These can be loaded afterwards in the menu.
If no arguments are passed to retroarch, it is equivalent to calling retroarch with this as only argument.

.TP
\fB--features\fR
Prints available features compiled into RetroArch, then exits.

If PATH is a directory, RetroArch will try to find the first implementation that claims to support
the extension of the ROM used, and use that libretro implementation.
If two or more different implementations claim to support a certain ROM extension, there might be collisions.

.TP
\fB--save PATH, -s PATH\fR
Overrides the path used for save ram (*.srm).
Without this flag, the save ram path will be inferred from the rom path name, and put in the same directory as the rom file with the extention replaced with '.srm'.
If PATH is a directory, RetroArch will treat this as the save file directory, where the save file name will be inferred from the rom name.

.TP
\fB--savestate PATH, -S PATH\fR
Overrides the path used for save states.
Without this flag, the save state path will be inferred from the rom path name, and put in the same directory as the rom file with the extention replace with '.state'.
If PATH is a directory, RetroArch will treat this as the save state directory, where the state file name will be inferred from the rom name.
Do note that save states are bound to the libretro implementation being used. Using a different libretro could invalidate the save state file.

.TP
\fB--config PATH, -c PATH\fR
Sets the configuration file path. \fBretroarch\fR will use this path to load the configuration file.
Should this not be defined, \fBretroarch\fR will look in platform specific paths to attempt finding the config file.
/etc/retroarch.cfg (when installed), or retroarch.cfg in the source tarball serves as a skeleton configuration file.
/etc/retroarch.cfg should serve as a skeleton config only.

.IP
Unix-like systems will look in $XDG_CONFIG_HOME/retroarch/retroarch.cfg first. If $XDG_CONFIG_HOME is not defined, it is assumed to be $HOME/.config as per specification. Then it will try $HOME/.retroarch.cfg. If both paths fail, RetroArch will try to create a new, default config file in $XDG_CONFIG_HOME/retroarch/retroarch.cfg (or the $HOME/.config default for $XDG_CONFIG_HOME).
If all fails, default settings will be assumed.
If RetroArch creates a new default config file, it will attempt to load the skeleton config file /etc/retroarch.cfg and use that as a basis.
This allows distributions to set up default paths for libretro cores, and similar things.
A configuration file does not need to define every possible option, only those which should be overridden.

If config_save_on_exit = true is set in the config file, RetroArch will overwrite the config file on exit. Settings can be changed from within RGUI.
If RetroArch overwrites a config file, formatting, comments, etc will be lost.
If RetroArch creates a default config file, it will have config_save_on_exit set automatically.

.IP
Windows will look in retroarch.cfg in same folder where retroarch.exe resides.
A default config file will also be created in the same manner as Unix.

.TP
\fB--appendconfig PATH\fR
Appends a different set of config files to the config file loaded in -c (or default).
Multiple config files are delimited by ','.
Every config file will be appended in order where the key-value pairs of the next config file takes priority over the old ones.

.TP
\fB--gameboy PATH, -g PATH\fR
Path to a Nintendo Game Boy ROM. If this flag is set, the Super Game Boy subsystem will be activated. The Super Game Boy BIOS needs to be loaded as the normal rom.

.TP
\fB--bsx PATH, -b PATH\fR
Path to BS-X rom. Load BS-X BIOS as the regular rom.
When using BS-X, save ram paths will be inferred from the BS-X BIOS path, not BS-X rom path.

.TP
\fB--bsxslot PATH, -B PATH\fR
Path to BS-X slotted rom. Load BS-X BIOS as the regular rom.
When using BS-X, save ram paths will be inferred from the BS-X BIOS path, not BS-X rom path.

.TP
\fB--sufamiA PATH\fR
Path to A slot in Sufami Turbo. Load Sufami Turbo BIOS as regular rom.
When using Sufami, save ram paths will be inferred from the Sufami BIOS path, not slot paths.

.TP
\fB--sufamiB PATH\fR
Path to B slot in Sufami Turbo. Load Sufami Turbo BIOS as regular rom.
When using Sufami, save ram paths will be inferred from the Sufami BIOS path, not slot paths.

.TP
\fB--nodevice PORT, -N PORT\fR
Disconnects an input device from port number PORT. Possible values for PORT are 1 to 8. This may be needed for some odd games to run properly.
If set explicitly here, overrides config file for that port.

.TP
\fB--dualanalog PORT, -A PORT\fR
Connects a DualAnalog controller into port PORT. Possible values are 1 to 8.
If set explicitly here, overrides config file for that port.

.TP
\fB--device PORT:ID, -d PORT:ID\fR
Connects a generic input device ID into port PORT. Possible values for port are 1 to 8.
If set explicitly here, overrides config file for that port.
ID is an unsigned number corresponding to the device for a libretro core.

.TP
\fB--sram-mode MODE, -M MODE\fR
MODE designates how to handle SRAM.
The format of the second parameter is {no,}load-{no,}save.
These two boolean values tell if SRAM loading and SRAM saving should take place.
Note that noload-save implies that the SRAM will be overwritten with new data.

.TP
\fB-D, --detach\fR
Detach from the current console. This is currently only relevant for Microsoft Windows.

.SH "SEE ALSO"
\fBretroarch-joyconfig\fR(1)