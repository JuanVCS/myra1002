/*  RetroArch - A frontend for libretro.
 *  Copyright (C) 2010-2014 - Hans-Kristian Arntzen
 *  Copyright (C) 2011-2014 - Daniel De Matteis
 *  Copyright (C) 2012-2014 - Michael Lelli
 * 
 *  RetroArch is free software: you can redistribute it and/or modify it under the terms
 *  of the GNU General Public License as published by the Free Software Found-
 *  ation, either version 3 of the License, or (at your option) any later version.
 *
 *  RetroArch is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 *  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 *  PURPOSE.  See the GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along with RetroArch.
 *  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _GX_INPUT_H
#define _GX_INPUT_H

enum
{
   GX_GC_A                 = 0,
   GX_GC_B,
   GX_GC_X,
   GX_GC_Y,
   GX_GC_UP,
   GX_GC_DOWN,
   GX_GC_LEFT,
   GX_GC_RIGHT,
   GX_GC_Z_TRIGGER,
   GX_GC_L_TRIGGER,
   GX_GC_R_TRIGGER,
   GX_GC_START,
   GX_GC_HOME, // needed on GameCube as "fake" menu button
#ifdef HW_RVL
   GX_CLASSIC_A,
   GX_CLASSIC_B,
   GX_CLASSIC_X,
   GX_CLASSIC_Y,
   GX_CLASSIC_UP,
   GX_CLASSIC_DOWN,
   GX_CLASSIC_LEFT,
   GX_CLASSIC_RIGHT,
   GX_CLASSIC_PLUS,
   GX_CLASSIC_MINUS,
   GX_CLASSIC_HOME,
   GX_CLASSIC_L_TRIGGER,
   GX_CLASSIC_R_TRIGGER,
   GX_CLASSIC_ZL_TRIGGER,
   GX_CLASSIC_ZR_TRIGGER,
   GX_WIIMOTE_A,
   GX_WIIMOTE_B,
   GX_WIIMOTE_1,
   GX_WIIMOTE_2,
   GX_WIIMOTE_UP,
   GX_WIIMOTE_DOWN,
   GX_WIIMOTE_LEFT,
   GX_WIIMOTE_RIGHT,
   GX_WIIMOTE_PLUS,
   GX_WIIMOTE_MINUS,
   GX_WIIMOTE_HOME,
   GX_NUNCHUK_Z,
   GX_NUNCHUK_C,
   GX_NUNCHUK_UP,
   GX_NUNCHUK_DOWN,
   GX_NUNCHUK_LEFT,
   GX_NUNCHUK_RIGHT,
#endif
#ifdef HAVE_LIBSICKSAXIS
   GX_SIXAXIS_CIRCLE,
   GX_SIXAXIS_CROSS,
   GX_SIXAXIS_TRIANGLE,
   GX_SIXAXIS_SQUARE,
   GX_SIXAXIS_UP,
   GX_SIXAXIS_DOWN,
   GX_SIXAXIS_LEFT,
   GX_SIXAXIS_RIGHT,
   GX_SIXAXIS_L1,
   GX_SIXAXIS_R1,
   GX_SIXAXIS_L2,
   GX_SIXAXIS_R2,
   GX_SIXAXIS_L3,
   GX_SIXAXIS_R3,
   GX_SIXAXIS_START,
   GX_SIXAXIS_SELECT,
   GX_SIXAXIS_PS,
#endif
   GX_QUIT_KEY,
};

enum gx_device_id
{
   GX_DEVICE_GC_ID_JOYPAD_A = 0,
   GX_DEVICE_GC_ID_JOYPAD_B,
   GX_DEVICE_GC_ID_JOYPAD_X,
   GX_DEVICE_GC_ID_JOYPAD_Y,
   GX_DEVICE_GC_ID_JOYPAD_UP,
   GX_DEVICE_GC_ID_JOYPAD_DOWN,
   GX_DEVICE_GC_ID_JOYPAD_LEFT,
   GX_DEVICE_GC_ID_JOYPAD_RIGHT,
   GX_DEVICE_GC_ID_JOYPAD_Z_TRIGGER,
   GX_DEVICE_GC_ID_JOYPAD_L_TRIGGER,
   GX_DEVICE_GC_ID_JOYPAD_R_TRIGGER,
   GX_DEVICE_GC_ID_JOYPAD_START,
   GX_DEVICE_GC_ID_JOYPAD_HOME,

#ifdef HW_RVL
   // CLASSIC CONTROLLER
   GX_DEVICE_CLASSIC_ID_JOYPAD_A,
   GX_DEVICE_CLASSIC_ID_JOYPAD_B,
   GX_DEVICE_CLASSIC_ID_JOYPAD_X,
   GX_DEVICE_CLASSIC_ID_JOYPAD_Y,
   GX_DEVICE_CLASSIC_ID_JOYPAD_UP,
   GX_DEVICE_CLASSIC_ID_JOYPAD_DOWN,
   GX_DEVICE_CLASSIC_ID_JOYPAD_LEFT,
   GX_DEVICE_CLASSIC_ID_JOYPAD_RIGHT,
   GX_DEVICE_CLASSIC_ID_JOYPAD_PLUS,
   GX_DEVICE_CLASSIC_ID_JOYPAD_MINUS,
   GX_DEVICE_CLASSIC_ID_JOYPAD_HOME,
   GX_DEVICE_CLASSIC_ID_JOYPAD_L_TRIGGER,
   GX_DEVICE_CLASSIC_ID_JOYPAD_R_TRIGGER,
   GX_DEVICE_CLASSIC_ID_JOYPAD_ZL_TRIGGER,
   GX_DEVICE_CLASSIC_ID_JOYPAD_ZR_TRIGGER,

   // WIIMOTE (PLUS OPTIONAL NUNCHUK)
   GX_DEVICE_WIIMOTE_ID_JOYPAD_A,
   GX_DEVICE_WIIMOTE_ID_JOYPAD_B,
   GX_DEVICE_WIIMOTE_ID_JOYPAD_1,
   GX_DEVICE_WIIMOTE_ID_JOYPAD_2,
   GX_DEVICE_WIIMOTE_ID_JOYPAD_UP,
   GX_DEVICE_WIIMOTE_ID_JOYPAD_DOWN,
   GX_DEVICE_WIIMOTE_ID_JOYPAD_LEFT,
   GX_DEVICE_WIIMOTE_ID_JOYPAD_RIGHT,
   GX_DEVICE_WIIMOTE_ID_JOYPAD_PLUS,
   GX_DEVICE_WIIMOTE_ID_JOYPAD_MINUS,
   GX_DEVICE_WIIMOTE_ID_JOYPAD_HOME,
   GX_DEVICE_NUNCHUK_ID_JOYPAD_Z,
   GX_DEVICE_NUNCHUK_ID_JOYPAD_C,
   GX_DEVICE_NUNCHUK_ID_JOYPAD_UP,
   GX_DEVICE_NUNCHUK_ID_JOYPAD_DOWN,
   GX_DEVICE_NUNCHUK_ID_JOYPAD_LEFT,
   GX_DEVICE_NUNCHUK_ID_JOYPAD_RIGHT,
#endif

#ifdef HAVE_LIBSICKSAXIS
   GX_DEVICE_SIXAXIS_ID_JOYPAD_CIRCLE,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_CROSS,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_TRIANGLE,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_SQUARE,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_UP,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_DOWN,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_LEFT,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_RIGHT,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_L1,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_R1,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_L2,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_R2,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_L3,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_R3,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_START,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_SELECT,
   GX_DEVICE_SIXAXIS_ID_JOYPAD_PS,
#endif
   
   RARCH_LAST_PLATFORM_KEY,
};

#endif
